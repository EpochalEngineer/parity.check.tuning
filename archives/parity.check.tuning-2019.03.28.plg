<?xml version="1.0" standalone="yes"?>
<!DOCTYPE PLUGIN [
<!ENTITY name "Parity Check Tuning">
<!ENTITY author "Dave Walker (itimpi)">
<!ENTITY version "2019.03.28">
<!ENTITY md5 "8327c2ed21b9169e2b0fbceed5cbb154">
<!ENTITY launch "Settings/Scheduler">
<!ENTITY plugin "parity.check.tuning">
<!ENTITY plugdir "/usr/local/emhttp/plugins/&name;">
<!ENTITY github "itimpi/parity.check.tuning">
<!ENTITY pluginURL "https://raw.githubusercontent.com/&github;/master/&plugin;.plg">
<!ENTITY emhttp "/usr/local/emhttp/plugins/&plugin;">
]>
<PLUGIN name="&name;" 
	author="&author;" 
	version="&version;" 
	launch="&launch;" 
	pluginURL="&pluginURL;" 
	icon="https://raw.githubusercontent.com/&github;/master/&plugin;.png"
	iconFA="tools" 
	support="https://lime-technology.com/forums/topic/70783-parity-check-tuning/">

<CHANGES>
###2019.03.28
- Added new CA plugin update feature
- Improved GUI on Settings page with more extensive help and better checks on settings
- Added option to Pause/Resume array operations if disks overheat
- Added option to Pause/Resume of paritySync/Disk Rebuild and disk Clear operations
- Added option to send notifications on Pause/Resume
- Added sending a notification if its detected the array was stopped while an array operation was in progress
- Added a Paypal donate option (be interesting to see if any actually happen!).

###2019.03.15
- Improvements to the help text built into the GUI as a result of questions from users
- fixed some minor GUI display glitches.

###2019.03.13
- First official Beta version.

###2019.03.08
- Version for alpha testing.
</CHANGES>

<FILE Run="/bin/bash">
  <INLINE>
    # Remove old 'source' files
      rm -f $(ls /boot/config/plugins/&plugin;/&plugin;*.txz 2&gt;/dev/null | grep -v '&version;')
  </INLINE>
</FILE>
  
<!--
The 'source' file. 
-->
  <FILE Name="/boot/config/plugins/&plugin;/&plugin;-&version;.txz" Run="upgradepkg --install-new">
    <!--      <URL>/mnt/cache/Dropbox/Projects/&plugin;/archives/&plugin;-&version;.txz</URL>     --> 
    <URL>https://raw.githubusercontent.com/&github;/master/archives/&plugin;-&version;.txz</URL>
  </FILE>
 
<!--
The 'post-install' script
-->
<FILE Run="/bin/bash">
  <INLINE>
    /usr/local/emhttp/plugins/&plugin;/&plugin;.php "updatecron"
    # Replace the standard mdcmd one with our custom version
    if [ -f /usr/local/sbin/mdcmd ]; then
      mv -f /usr/local/sbin/mdcmd /usr/local/sbin/mdcmd.orig
      ln -s /usr/local/emhttp/plugins/&plugin;/&plugin;.mdcmd /usr/local/sbin/mdcmd
    fi
    echo ""
    echo "----------------------------------------------------"
    echo " &name; has been installed."
    echo " Copyright 2019, Dave Walker (itimpi)"
    echo " Version: &version;"
    echo "----------------------------------------------------"
    echo ""
  </INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
  <INLINE>
    # We need to replace our customised mdcmd with the original version
    if [ -h /usr/local/sbin/mdcmd ]; then
      if [ -e /usr/local/sbin/mdcmd.orig ]; then
        rm /usr/local/sbin/mdcmd
        mv /usr/local/sbin/mdcmd.orig /usr/local/sbin/mdcmd
      else
        # Should not be possible to get here but lets play safe!
        echo ""
        echo "--------------------------------------"
        echo " ERROR:  saved mdcmd command not found"
        echo "--------------------------------------"
      fi
    fi
    removepkg &plugin;-&version;
    rm -rf &plugdir;
    rm -rf /boot/config/plugins/&plugin;
    /usr/local/sbin/update_cron
  </INLINE>
</FILE>

</PLUGIN>
